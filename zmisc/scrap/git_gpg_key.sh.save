#!/bin/bash

# see if one exists ?
#gpg --list-secret-keys --keyid-format=long
#sleep 5
#gpg --delete-secret-key ${name}
#gpg --full-generate-key
#gpg --armor --export ${public_key}
#git config --global user.signingkey ${key}
# setting up pinentry

app-crypt/gnupg

eselect pinentry list/set (gnome)

GPG agent can be used via SSH (see dom0/authCA_GPG+)
https://wiki.gentoo.org/wiki/GnuPG#Using_a_GPG_agent

gpg --full-generate-key

copy gitconfig to users directory

vscode should prompt for a web login to github

--- this will allow you to pass through ssh, but not gpg, for gpg, you have to register properly

for vscode, you will have to enable commit signing, through the file/preferences/settings, upon setting this
the new push will prompt pinentry, and you can use gnome to save your key, through a password.

gpg --export -a [KEY_NAME] > public,key				-- BEGIN PGP PUBLIC KEY BLOCK
gpg --export-secret-key -a [KEY_NAME] > private.key	<passphrase protect? -- BEGIN PGP PRIVATE KEY BLOCK

gpg --import public.key [KEY_FILE]
gpg --import private,key <passphrase protect> [KEY_FILE]






=========================================================================================

kwallet => ~/.local/share/kwalletd




packages : pinentry + gnupg

------------------------------------------------------------------------------------

eselect pinentry set gnome3 (gnome)
eselect pinentry set qt5    (plasma)

~/.gnupg/gpg-agent.conf

	pinentry-program /usr/bin/pinentry
	no-grab
	default-cache-ttl 1800

~/.gnupg/gpg.conf

	use-agent

gpg-connect-agent reloadagent /bye

(ok)

##################################################

query to see if key exists, if not import from a migration, or generate if none is available
export the public key
verify pinentry
verify .gnupg directory
reconnect to the gpg-agent
git config --global user.signingkey [key-email]
vscode requires setting gpg-signing setting [file/settings]


